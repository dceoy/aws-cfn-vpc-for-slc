---
AWSTemplateFormatVersion: 2010-09-09
Description: EC2 instance with IAM role
Parameters:
  KeyName:
    Description: Set a name of an existing EC2 KeyPair to enable SSH access to the instance.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  VpcStackName:
    Description: Set the VPC stack name.
    Type: String
    Default: vpc-private-subnets-with-gateway-endpoints
  ProjectName:
    Description: Set the project name.
    Type: String
    Default: slc
  ImageId:
    Description: Set an EC2 AMI ID.
    Type: AWS::EC2::Image::Id
    Default: ami-0fd4bb49e3134c823
    ConstraintDescription: must be a valid EC2 instance type.
  InstanceType:
    Description: Set an EC2 instance type.
    Type: String
    Default: t2.micro
    ConstraintDescription: must be a valid EC2 instance type.
  EbsVolumeSize:
    Description: Set EBS volume size.
    Type: Number
    MinValue: 0
    Default: 30
Resources:
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref Ec2LaunchTemplate
        Version: !GetAtt Ec2LaunchTemplate.LatestVersionNumber
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-ec2-instance
        - Key: ProjectName
          Value: !Ref ProjectName
  Ec2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub ${ProjectName}-ec2-launch-template
      LaunchTemplateData:
        ImageId: !Ref ImageId
        KeyName: !Ref KeyName
        InstanceType: !Ref InstanceType
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: !Ref EbsVolumeSize
              VolumeType: gp3
              Encrypted: true
              DeleteOnTermination: true
        InstanceInitiatedShutdownBehavior: terminate
        NetworkInterfaces:
          - DeviceIndex: 0
            SubnetId:
              Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-PrivateSubnet0
            Groups:
              - Fn::ImportValue: !Sub ${AWS::Region}-${VpcStackName}-DefaultSecurityGroup
        IamInstanceProfile:
          Arn: !GetAtt Ec2InstanceProfile.Arn
        UserData:
          Fn::Base64: |
            #!/bin/bash
            sudo yum -y upgrade
      TagSpecifications:
        - ResourceType: launch-template
          Tags:
            - Key: Name
              Value: !Sub ${ProjectName}-ec2-launch-template
            - Key: ProjectName
              Value: !Ref ProjectName
  Ec2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-Ec2InstanceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - ssm.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-Ec2InstanceRole
  Ec2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub ${ProjectName}-Ec2InstanceProfile
      Path: /
      Roles:
        - !Ref Ec2InstanceRole
Outputs:
  Ec2InstanceId:
    Description: EC2 instance Id
    Value: !Ref Ec2Instance
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-Ec2Instance
  Ec2LaunchTemplate:
    Value: !Ref Ec2LaunchTemplate
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-Ec2LaunchTemplate
  Ec2InstanceRoleArn:
    Description: EC2 instance role Arn
    Value: !GetAtt Ec2InstanceRole.Arn
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-Ec2InstanceRoleArn
  Ec2InstanceProfileArn:
    Description: EC2 instance profile Arn
    Value: !GetAtt Ec2InstanceProfile.Arn
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-Ec2InstanceProfileArn
