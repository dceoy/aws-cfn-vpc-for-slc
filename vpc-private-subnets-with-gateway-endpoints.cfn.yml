---
AWSTemplateFormatVersion: 2010-09-09
Description: VPC with private subnets and gateway endpoints
Parameters:
  ProjectName:
    Description: Set the project name.
    Type: String
    Default: slc
  NumberOfAvailabilityZones:
    Description: Set the number of availability zones.
    Type: Number
    Default: 3
    AllowedValues:
      - 0
      - 1
      - 2
      - 3
Conditions:
  UseAvailabilityZone0:
    Fn::Or:
      - Fn::Equals:
          - !Ref NumberOfAvailabilityZones
          - 1
      - !Condition UseAvailabilityZone1
  UseAvailabilityZone1:
    Fn::Or:
      - Fn::Equals:
          - !Ref NumberOfAvailabilityZones
          - 2
      - !Condition UseAvailabilityZone2
  UseAvailabilityZone2:
    Fn::Equals:
      - !Ref NumberOfAvailabilityZones
      - 3
Mappings:
  SubnetConfig:
    Vpc:
      CIDR: 10.0.0.0/16
    Private0:
      CIDR: 10.0.0.0/24
    Private1:
      CIDR: 10.0.16.0/24
    Private2:
      CIDR: 10.0.32.0/24
Resources:
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      EnableDnsSupport: true
      EnableDnsHostnames: true
      CidrBlock:
        Fn::FindInMap:
          - SubnetConfig
          - Vpc
          - CIDR
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Network
          Value: Public
        - Key: Name
          Value: !Sub ${ProjectName}-vpc
        - Key: ProjectName
          Value: !Ref ProjectName
  PrivateSubnet0:
    Type: AWS::EC2::Subnet
    Condition: UseAvailabilityZone0
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: !Ref AWS::Region
      CidrBlock:
        Fn::FindInMap:
          - SubnetConfig
          - Private0
          - CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Network
          Value: Private
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - !Ref ProjectName
                - -subnet-private0-
                - Fn::Select:
                    - 0
                    - Fn::GetAZs: !Ref AWS::Region
        - Key: ProjectName
          Value: !Ref ProjectName
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Condition: UseAvailabilityZone1
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: !Ref AWS::Region
      CidrBlock:
        Fn::FindInMap:
          - SubnetConfig
          - Private1
          - CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Network
          Value: Private
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - !Ref ProjectName
                - -subnet-private1-
                - Fn::Select:
                    - 1
                    - Fn::GetAZs: !Ref AWS::Region
        - Key: ProjectName
          Value: !Ref ProjectName
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Condition: UseAvailabilityZone2
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone:
        Fn::Select:
          - 2
          - Fn::GetAZs: !Ref AWS::Region
      CidrBlock:
        Fn::FindInMap:
          - SubnetConfig
          - Private2
          - CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Application
          Value: !Ref AWS::StackName
        - Key: Network
          Value: Private
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - !Ref ProjectName
                - -subnet-private2-
                - Fn::Select:
                    - 2
                    - Fn::GetAZs: !Ref AWS::Region
        - Key: ProjectName
          Value: !Ref ProjectName
  PrivateRouteTable0:
    Type: AWS::EC2::RouteTable
    Condition: UseAvailabilityZone0
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - !Ref ProjectName
                - -rtb-private0-
                - Fn::Select:
                    - 0
                    - Fn::GetAZs: !Ref AWS::Region
        - Key: ProjectName
          Value: !Ref ProjectName
  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Condition: UseAvailabilityZone1
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - !Ref ProjectName
                - -rtb-private1-
                - Fn::Select:
                    - 1
                    - Fn::GetAZs: !Ref AWS::Region
        - Key: ProjectName
          Value: !Ref ProjectName
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Condition: UseAvailabilityZone2
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - ''
              - - !Ref ProjectName
                - -rtb-private2-
                - Fn::Select:
                    - 2
                    - Fn::GetAZs: !Ref AWS::Region
        - Key: ProjectName
          Value: !Ref ProjectName
  PrivateSubnetRouteTableAssociation0:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: UseAvailabilityZone0
    Properties:
      SubnetId: !Ref PrivateSubnet0
      RouteTableId: !Ref PrivateRouteTable0
  PrivateSubnetRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: UseAvailabilityZone1
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1
  PrivateSubnetRouteTableAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Condition: UseAvailabilityZone2
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2
  S3GatewayEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Condition: UseAvailabilityZone0
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Resource: '*'
            Effect: Allow
            Principal: '*'
            Action: '*'
      RouteTableIds:
        Fn::If:
          - UseAvailabilityZone2
          - - !Ref PrivateRouteTable0
            - !Ref PrivateRouteTable1
            - !Ref PrivateRouteTable2
          - Fn::If:
              - UseAvailabilityZone1
              - - !Ref PrivateRouteTable0
                - !Ref PrivateRouteTable1
              - - !Ref PrivateRouteTable0
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcEndpointType: Gateway
      VpcId: !Ref Vpc
  DynamodbGatewayEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Condition: UseAvailabilityZone0
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Resource: '*'
            Effect: Allow
            Principal: '*'
            Action: '*'
      RouteTableIds:
        Fn::If:
          - UseAvailabilityZone2
          - - !Ref PrivateRouteTable0
            - !Ref PrivateRouteTable1
            - !Ref PrivateRouteTable2
          - Fn::If:
              - UseAvailabilityZone1
              - - !Ref PrivateRouteTable0
                - !Ref PrivateRouteTable1
              - - !Ref PrivateRouteTable0
      ServiceName: !Sub com.amazonaws.${AWS::Region}.dynamodb
      VpcEndpointType: Gateway
      VpcId: !Ref Vpc
Outputs:
  VpcId:
    Description: VpcId of the VPC
    Value: !Ref Vpc
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-Vpc
  DefaultSecurityGroupId:
    Description: SecurityGroupId of the default security group
    Value: !GetAtt Vpc.DefaultSecurityGroup
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-DefaultSecurityGroup
  DefaultNetworkAclId:
    Description: NetworkAclId of the default network ACL
    Value: !GetAtt Vpc.DefaultNetworkAcl
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-DefaultNetworkAcl
  PrivateSubnetId0:
    Description: SubnetId of the private subnet 0
    Value:
      Fn::If:
        - UseAvailabilityZone0
        - !Ref PrivateSubnet0
        - 'null'
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PrivateSubnet0
  PrivateSubnetId1:
    Description: SubnetId of the private subnet 1
    Value:
      Fn::If:
        - UseAvailabilityZone1
        - !Ref PrivateSubnet1
        - 'null'
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PrivateSubnet1
  PrivateSubnetId2:
    Description: SubnetId of the private subnet 2
    Value:
      Fn::If:
        - UseAvailabilityZone2
        - !Ref PrivateSubnet2
        - 'null'
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PrivateSubnet2
  AvailabilityZone0:
    Description: Availability zone 0
    Value:
      Fn::If:
        - UseAvailabilityZone0
        - !GetAtt PrivateSubnet0.AvailabilityZone
        - 'null'
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-AvailabilityZone0
  AvailabilityZone1:
    Description: Availability zone 1
    Value:
      Fn::If:
        - UseAvailabilityZone1
        - !GetAtt PrivateSubnet1.AvailabilityZone
        - 'null'
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-AvailabilityZone1
  AvailabilityZone2:
    Description: Availability zone 2
    Value:
      Fn::If:
        - UseAvailabilityZone2
        - !GetAtt PrivateSubnet2.AvailabilityZone
        - 'null'
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-AvailabilityZone2
  PrivateRouteTableId0:
    Description: RouteTableId of the private route table 0
    Value:
      Fn::If:
        - UseAvailabilityZone0
        - !Ref PrivateRouteTable0
        - 'null'
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PrivateRouteTable0
  PrivateRouteTableId1:
    Description: RouteTableId of the private route table 1
    Value:
      Fn::If:
        - UseAvailabilityZone1
        - !Ref PrivateRouteTable1
        - 'null'
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PrivateRouteTable1
  PrivateRouteTableId2:
    Description: RouteTableId of the private route table 2
    Value:
      Fn::If:
        - UseAvailabilityZone2
        - !Ref PrivateRouteTable2
        - 'null'
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-PrivateRouteTable2
  S3GatewayEndpointId:
    Description: S3 gateway endpoint Id
    Value:
      Fn::If:
        - UseAvailabilityZone0
        - !Ref S3GatewayEndpoint
        - 'null'
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-S3GatewayEndpoint
  DynamodbGatewayEndpointId:
    Description: DynamoDB gateway endpoint Id
    Value:
      Fn::If:
        - UseAvailabilityZone0
        - !Ref DynamodbGatewayEndpoint
        - 'null'
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-DynamodbGatewayEndpoint
